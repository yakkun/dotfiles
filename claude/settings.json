{
  "permissions": {
    "allow": [
      "List(*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(touch:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(pwd)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(which:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(wc:*)",
      "Bash(cmp:*)",
      "Bash(ln:*)",
      "Bash(diff:*)",
      "Bash(date:*)",
      "Bash(make:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(history:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(file:*)",
      "Bash(git:*)",
      "Bash(gh:*)",
      "Fetch(https://*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(brew:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(uv:*)",
      "Bash(docker:*)",
      "Bash(kubectl:*)",
      "Bash(open:*)",
      "Bash(pbcopy:*)",
      "Bash(pbpaste:*)",
      "Bash(xcodebuild:*)"
    ],
    "deny": []
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "osascript -e 'display notification \"Require your confirmation\" with title \"Claude Code is waiting\" sound name \"Glass\"'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "osascript -e 'display notification \"All tasks completed.\" with title \"Claude Code is done for you\" sound name \"Hero\"'"
          }
        ]
      }
    ]
  },
  "model": "opus",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); currentDir=$(echo \"$input\" | jq -r '.workspace.current_dir // .cwd // \".\"'); dirName=$(basename \"$currentDir\"); model=$(echo \"$input\" | jq -r '.model.display_name // .model.id // \"claude\"'); modelShort=$(echo \"$model\" | sed -E 's/.*(sonnet|haiku|opus).*/\\1/I; t; s/.*/claude/'); printf \"\\033[36m%s\\033[0m \\033[35m%s\\033[0m\" \"$dirName\" \"$modelShort\""
  }
}
